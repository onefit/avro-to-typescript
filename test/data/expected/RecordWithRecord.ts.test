// tslint:disable
import { Type } from "avsc"
import { BaseAvroRecord } from "../BaseAvroRecord";
import { ThingInterface as Thing } from "./Thing";

export interface RecordWithRecordInterface {
    thing1: Thing;
    thing2: any;
}

export class RecordWithRecord extends BaseAvroRecord implements RecordWithRecordInterface {

    public thing1!: Thing;
    public thing2: any = {"id":0};

    public static readonly subject: string = "record-with-record";
    public static readonly schema: object = {
    "type": "record",
    "name": "RecordWithRecord",
    "namespace": "records",
    "fields": [
        {
            "name": "thing1",
            "type": {
                "type": "record",
                "name": "Thing",
                "fields": [
                    {
                        "name": "id",
                        "type": "int"
                    }
                ]
            }
        },
        {
            "name": "thing2",
            "type": "Thing",
            "default": {
                "id": 0
            }
        }
    ]
}

    public schema(): object {
        return RecordWithRecord.schema;
    }

    public subject(): string {
        return RecordWithRecord.subject;
    }

    public static type(): Type {
        return RecordWithRecord.getTypeForSchema(RecordWithRecord.schema);
    }
}
